name: Deployment Workflow

on:
  push:
    branches:
      - "main"
    tags:
      - "release-*"
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".dockerignore"
      - ".gitignore"

jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/madetara/ttembed/bot:1.0.${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_image:
    runs-on: ubuntu-22.04
    needs: build_and_push
    env:
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      BOT_URL: ${{ secrets.BOT_URL }}
      BOT_PORT: ${{ secrets.BOT_PORT }}
      CR_PAT: ${{ secrets.CR_PAT }}
    steps:
      - name: Deploy image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          username: root
          envs: TG_TOKEN, CR_PAT, GITHUB_RUN_NUMBER, BOT_PORT, BOT_URL
          script: |
            echo $CR_PAT | docker login ghcr.io -u madetara --password-stdin
            docker stop ttembed
            docker rm ttembed
            docker run -d --name ttembed --restart unless-stopped -p $BOT_PORT:3001 \
              --network container:wireguard \
              --env TG_TOKEN="$TG_TOKEN" \
              --env BOT_URL="$BOT_URL" \
              --env BOT_PORT="$BOT_PORT" \
              "ghcr.io/madetara/ttembed/bot:1.0.$GITHUB_RUN_NUMBER"
